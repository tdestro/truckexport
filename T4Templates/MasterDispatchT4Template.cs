// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version: 12.0.0.0
//  
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
namespace truck_manifest.T4Templates
{
    using System.Linq;
    using System.Text;
    using System.Collections.Generic;
    using System;
    
    /// <summary>
    /// Class to produce the template output
    /// </summary>
    
    #line 1 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public partial class MasterDispatchT4Template : MasterDispatchT4TemplateBase
    {
#line hidden
        /// <summary>
        /// Create the template output
        /// </summary>
        public virtual string TransformText()
        {
            this.Write(@"

<!DOCTYPE html PUBLIC ""-//W3C//DTD XHTML 1.0 Transitional//EN"" ""http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd"">
<html xmlns=""http://www.w3.org/1999/xhtml"">
<head>
<meta http-equiv=""Content-Type"" content=""text/html; charset=UTF-8"" />
<title>Dispatch</title>
<style type=""text/css"">
.detail {	FONT-FAMILY: Arial;
	FONT-SIZE: 8pt;
	padding-left:4px;
	padding-right:4px;
}
.header {	FONT-FAMILY: Arial;
	FONT-SIZE: 8pt;
	padding-left:4px;
	padding-right:4px;

	background-color: #cccccc;
}
</style>

</head>
<body>
<table cellpadding=""0"" cellspacing=""0"">
  <tbody>
    ");
            
            #line 32 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(report));
            
            #line default
            #line hidden
            this.Write(@"

<tr>
    <td class=""detail"" align=""left""><b><br /></b></td>
</tr><tr><td class=""detail"" align=""center""><b>Inserting Results for Completes</b></td>
</tr><tr><td class=""detail"" align=""left""><hr /></td>
</tr><tr><td class=""detail"" align=""left""><b><br /></b></td>
</tr><tr><td class=""detail"" align=""center""><b>Product Summary</b></td>
</tr><tr><td class=""detail"" align=""left""><hr /></td>

         ");
            
            #line 42 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
   
           foreach (KeyValuePair<string, Dictionary<string, Dictionary<string, int>>> product in ProductsMasterTotalsHash){
           if(altprod && product.Key == "PPG") {
           continue;
           }


             foreach (KeyValuePair<string, Dictionary<string, int>> entry in product.Value)
			{ 
            
            #line default
            #line hidden
            this.Write("\t\t\t<!--</tr><tr><td class=\"detail\" align=\"left\">");
            
            #line 51 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(product.Key));
            
            #line default
            #line hidden
            this.Write("-");
            
            #line 51 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Key));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"left\">");
            
            #line 51 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Key));
            
            #line default
            #line hidden
            this.Write("-");
            
            #line 51 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["StandardBundleSize"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 51 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["Draw"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 51 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["Bundles"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 51 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["Odds"]));
            
            #line default
            #line hidden
            this.Write("</td>\r\n<td class=\"detail\" align=\"right\">No. of Trips/Divs ");
            
            #line 52 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["NumberOfDrops"]));
            
            #line default
            #line hidden
            this.Write(" </td> -->\r\n         ");
            
            #line 53 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
 
			if (entry.Value["SingleCopyDraw"] > 0){
			 
            
            #line default
            #line hidden
            this.Write("\r\n</tr><tr><td class=\"detail\" align=\"left\">");
            
            #line 57 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(product.Key));
            
            #line default
            #line hidden
            this.Write("-");
            
            #line 57 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Key));
            
            #line default
            #line hidden
            this.Write(" SC</td><td class=\"detail\" align=\"left\">");
            
            #line 57 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Key));
            
            #line default
            #line hidden
            this.Write("-");
            
            #line 57 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["StandardBundleSize"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 57 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["SingleCopyDraw"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 57 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["SingleCopyBundles"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 57 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["SingleCopyOdds"]));
            
            #line default
            #line hidden
            this.Write("</td>\r\n<td class=\"detail\" align=\"right\">No. of Trips/Divs ");
            
            #line 58 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["SingleCopyNumberOfDrops"]));
            
            #line default
            #line hidden
            this.Write(" </td>\r\n\t\t\t       ");
            
            #line 59 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
 

			    } 

			    if (entry.Value["HomeDeliveryDraw"] > 0){
			 
            
            #line default
            #line hidden
            this.Write("</tr><tr><td class=\"detail\" align=\"left\">");
            
            #line 65 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(product.Key));
            
            #line default
            #line hidden
            this.Write("-");
            
            #line 65 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Key));
            
            #line default
            #line hidden
            this.Write(" HD</td><td class=\"detail\" align=\"left\">");
            
            #line 65 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Key));
            
            #line default
            #line hidden
            this.Write("-");
            
            #line 65 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["StandardBundleSize"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 65 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["HomeDeliveryDraw"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 65 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["HomeDeliveryBundles"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 65 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["HomeDeliveryOdds"]));
            
            #line default
            #line hidden
            this.Write("</td>\r\n<td class=\"detail\" align=\"right\">No. of Trips/Divs ");
            
            #line 66 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["HomeDeliveryNumberOfDrops"]));
            
            #line default
            #line hidden
            this.Write("  </td>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t    ");
            
            #line 72 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
 
			    }
			    }

			    }
			 
            
            #line default
            #line hidden
            this.Write("\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t </tr><tr><td class=\"detail\" align=\"left\"><b><br /></b></td>\r\n</tr" +
                    "><tr><td class=\"detail\" align=\"center\"><b>Depot Trip Summary</b></td>\r\n</tr><tr>" +
                    "<td class=\"detail\" align=\"left\"><hr /></td>\r\n\r\n\r\n\t\t\t \t\t\t     ");
            
            #line 89 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
      
					




			 			      foreach (KeyValuePair<string, Dictionary<string, Dictionary<string, int>>> product in ProductsMasterTotalsHash){
			 			       if(altprod && product.Key == "PPG") {
           continue;
           }
             foreach (KeyValuePair<string, Dictionary<string, int>> entry in product.Value){



              
            
            #line default
            #line hidden
            this.Write("\r\n         ");
            
            #line 105 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
 
			if (entry.Value["SingleCopyDrawDepot"] > 0){
			 
            
            #line default
            #line hidden
            this.Write("\r\n</tr><tr><td class=\"detail\" align=\"left\">");
            
            #line 109 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(product.Key));
            
            #line default
            #line hidden
            this.Write("-");
            
            #line 109 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Key));
            
            #line default
            #line hidden
            this.Write(" SC</td><td class=\"detail\" align=\"left\">");
            
            #line 109 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Key));
            
            #line default
            #line hidden
            this.Write("-");
            
            #line 109 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["StandardBundleSize"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 109 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["SingleCopyDrawDepot"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 109 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["SingleCopyBundlesDepot"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 109 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["SingleCopyOddsDepot"]));
            
            #line default
            #line hidden
            this.Write("</td>\r\n<td class=\"detail\" align=\"right\">No. of Trips/Divs ");
            
            #line 110 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["SingleCopyNumberOfDropsDepot"]));
            
            #line default
            #line hidden
            this.Write(" </td>\r\n\t\t\t       ");
            
            #line 111 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
 

			    } 

			    if (entry.Value["HomeDeliveryDrawDepot"] > 0){
			 
            
            #line default
            #line hidden
            this.Write("</tr><tr><td class=\"detail\" align=\"left\">");
            
            #line 117 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(product.Key));
            
            #line default
            #line hidden
            this.Write("-");
            
            #line 117 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Key));
            
            #line default
            #line hidden
            this.Write(" HD</td><td class=\"detail\" align=\"left\">");
            
            #line 117 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Key));
            
            #line default
            #line hidden
            this.Write("-");
            
            #line 117 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["StandardBundleSize"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 117 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["HomeDeliveryDrawDepot"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 117 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["HomeDeliveryBundlesDepot"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 117 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["HomeDeliveryOddsDepot"]));
            
            #line default
            #line hidden
            this.Write("</td>\r\n<td class=\"detail\" align=\"right\">No. of Trips/Divs ");
            
            #line 118 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["HomeDeliveryNumberOfDropsDepot"]));
            
            #line default
            #line hidden
            this.Write("  </td>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t    ");
            
            #line 124 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
 
			    }
			    }
			    }
			 
            
            #line default
            #line hidden
            this.Write("\r\n\r\n\t\t\t  </tr><tr><td class=\"detail\" align=\"left\"><b><br /></b></td>\r\n</tr><tr><t" +
                    "d class=\"detail\" align=\"center\"><b>Bulk Trip Summary</b></td>\r\n</tr><tr><td clas" +
                    "s=\"detail\" align=\"left\"><hr /></td>\r\n\r\n\r\n\t\t\t \t\t\t     ");
            
            #line 136 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
                  foreach (KeyValuePair<string, Dictionary<string, Dictionary<string, int>>> product in ProductsMasterTotalsHash){

			 			      if(altprod && product.Key == "PPG") {
           continue;
           }
             foreach (KeyValuePair<string, Dictionary<string, int>> entry in product.Value)			{ 
            
            #line default
            #line hidden
            this.Write("\r\n         ");
            
            #line 143 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
 
			if (entry.Value["SingleCopyDrawBulk"] > 0){
			 
            
            #line default
            #line hidden
            this.Write("\r\n</tr><tr><td class=\"detail\" align=\"left\">");
            
            #line 147 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(product.Key));
            
            #line default
            #line hidden
            this.Write("-");
            
            #line 147 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Key));
            
            #line default
            #line hidden
            this.Write(" SC</td><td class=\"detail\" align=\"left\">");
            
            #line 147 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Key));
            
            #line default
            #line hidden
            this.Write("-");
            
            #line 147 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["StandardBundleSize"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 147 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["SingleCopyDrawBulk"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 147 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["SingleCopyBundlesBulk"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 147 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["SingleCopyOddsBulk"]));
            
            #line default
            #line hidden
            this.Write("</td>\r\n<td class=\"detail\" align=\"right\">No. of Trips/Divs ");
            
            #line 148 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["SingleCopyNumberOfDropsBulk"]));
            
            #line default
            #line hidden
            this.Write(" </td>\r\n\t\t\t       ");
            
            #line 149 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
 

			    } 

			    if (entry.Value["HomeDeliveryDrawBulk"] > 0){
			 
            
            #line default
            #line hidden
            this.Write("</tr><tr><td class=\"detail\" align=\"left\">");
            
            #line 155 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(product.Key));
            
            #line default
            #line hidden
            this.Write("-");
            
            #line 155 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Key));
            
            #line default
            #line hidden
            this.Write(" HD</td><td class=\"detail\" align=\"left\">");
            
            #line 155 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Key));
            
            #line default
            #line hidden
            this.Write("-");
            
            #line 155 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["StandardBundleSize"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 155 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["HomeDeliveryDrawBulk"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 155 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["HomeDeliveryBundlesBulk"]));
            
            #line default
            #line hidden
            this.Write("</td><td class=\"detail\" align=\"right\">");
            
            #line 155 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["HomeDeliveryOddsBulk"]));
            
            #line default
            #line hidden
            this.Write("</td>\r\n<td class=\"detail\" align=\"right\">No. of Trips/Divs ");
            
            #line 156 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
            this.Write(this.ToStringHelper.ToStringWithCulture(entry.Value["HomeDeliveryNumberOfDropsBulk"]));
            
            #line default
            #line hidden
            this.Write("  </td>\r\n\r\n\r\n\r\n\r\n\r\n\t\t\t    ");
            
            #line 162 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
 
			    }
			    }
			    }
			 
            
            #line default
            #line hidden
            this.Write("\t\t\t </tr>\r\n\r\n\r\n    </tbody>\r\n</table>\r\n</body>\r\n</html>\r\n     ");
            return this.GenerationEnvironment.ToString();
        }
        
        #line 174 "C:\Users\IEUser\Desktop\truckexport\T4Templates\MasterDispatchT4Template.tt"
 
     public Dictionary<string, Dictionary<string, Dictionary<string, int>>> ProductsMasterTotalsHash {get; set;}

public string report {get; set; }
     public bool altprod{get; set;}

        
        #line default
        #line hidden
    }
    
    #line default
    #line hidden
    #region Base class
    /// <summary>
    /// Base class for this transformation
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Microsoft.VisualStudio.TextTemplating", "12.0.0.0")]
    public class MasterDispatchT4TemplateBase
    {
        #region Fields
        private global::System.Text.StringBuilder generationEnvironmentField;
        private global::System.CodeDom.Compiler.CompilerErrorCollection errorsField;
        private global::System.Collections.Generic.List<int> indentLengthsField;
        private string currentIndentField = "";
        private bool endsWithNewline;
        private global::System.Collections.Generic.IDictionary<string, object> sessionField;
        #endregion
        #region Properties
        /// <summary>
        /// The string builder that generation-time code is using to assemble generated output
        /// </summary>
        protected System.Text.StringBuilder GenerationEnvironment
        {
            get
            {
                if ((this.generationEnvironmentField == null))
                {
                    this.generationEnvironmentField = new global::System.Text.StringBuilder();
                }
                return this.generationEnvironmentField;
            }
            set
            {
                this.generationEnvironmentField = value;
            }
        }
        /// <summary>
        /// The error collection for the generation process
        /// </summary>
        public System.CodeDom.Compiler.CompilerErrorCollection Errors
        {
            get
            {
                if ((this.errorsField == null))
                {
                    this.errorsField = new global::System.CodeDom.Compiler.CompilerErrorCollection();
                }
                return this.errorsField;
            }
        }
        /// <summary>
        /// A list of the lengths of each indent that was added with PushIndent
        /// </summary>
        private System.Collections.Generic.List<int> indentLengths
        {
            get
            {
                if ((this.indentLengthsField == null))
                {
                    this.indentLengthsField = new global::System.Collections.Generic.List<int>();
                }
                return this.indentLengthsField;
            }
        }
        /// <summary>
        /// Gets the current indent we use when adding lines to the output
        /// </summary>
        public string CurrentIndent
        {
            get
            {
                return this.currentIndentField;
            }
        }
        /// <summary>
        /// Current transformation session
        /// </summary>
        public virtual global::System.Collections.Generic.IDictionary<string, object> Session
        {
            get
            {
                return this.sessionField;
            }
            set
            {
                this.sessionField = value;
            }
        }
        #endregion
        #region Transform-time helpers
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void Write(string textToAppend)
        {
            if (string.IsNullOrEmpty(textToAppend))
            {
                return;
            }
            // If we're starting off, or if the previous text ended with a newline,
            // we have to append the current indent first.
            if (((this.GenerationEnvironment.Length == 0) 
                        || this.endsWithNewline))
            {
                this.GenerationEnvironment.Append(this.currentIndentField);
                this.endsWithNewline = false;
            }
            // Check if the current text ends with a newline
            if (textToAppend.EndsWith(global::System.Environment.NewLine, global::System.StringComparison.CurrentCulture))
            {
                this.endsWithNewline = true;
            }
            // This is an optimization. If the current indent is "", then we don't have to do any
            // of the more complex stuff further down.
            if ((this.currentIndentField.Length == 0))
            {
                this.GenerationEnvironment.Append(textToAppend);
                return;
            }
            // Everywhere there is a newline in the text, add an indent after it
            textToAppend = textToAppend.Replace(global::System.Environment.NewLine, (global::System.Environment.NewLine + this.currentIndentField));
            // If the text ends with a newline, then we should strip off the indent added at the very end
            // because the appropriate indent will be added when the next time Write() is called
            if (this.endsWithNewline)
            {
                this.GenerationEnvironment.Append(textToAppend, 0, (textToAppend.Length - this.currentIndentField.Length));
            }
            else
            {
                this.GenerationEnvironment.Append(textToAppend);
            }
        }
        /// <summary>
        /// Write text directly into the generated output
        /// </summary>
        public void WriteLine(string textToAppend)
        {
            this.Write(textToAppend);
            this.GenerationEnvironment.AppendLine();
            this.endsWithNewline = true;
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void Write(string format, params object[] args)
        {
            this.Write(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Write formatted text directly into the generated output
        /// </summary>
        public void WriteLine(string format, params object[] args)
        {
            this.WriteLine(string.Format(global::System.Globalization.CultureInfo.CurrentCulture, format, args));
        }
        /// <summary>
        /// Raise an error
        /// </summary>
        public void Error(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Raise a warning
        /// </summary>
        public void Warning(string message)
        {
            System.CodeDom.Compiler.CompilerError error = new global::System.CodeDom.Compiler.CompilerError();
            error.ErrorText = message;
            error.IsWarning = true;
            this.Errors.Add(error);
        }
        /// <summary>
        /// Increase the indent
        /// </summary>
        public void PushIndent(string indent)
        {
            if ((indent == null))
            {
                throw new global::System.ArgumentNullException("indent");
            }
            this.currentIndentField = (this.currentIndentField + indent);
            this.indentLengths.Add(indent.Length);
        }
        /// <summary>
        /// Remove the last indent that was added with PushIndent
        /// </summary>
        public string PopIndent()
        {
            string returnValue = "";
            if ((this.indentLengths.Count > 0))
            {
                int indentLength = this.indentLengths[(this.indentLengths.Count - 1)];
                this.indentLengths.RemoveAt((this.indentLengths.Count - 1));
                if ((indentLength > 0))
                {
                    returnValue = this.currentIndentField.Substring((this.currentIndentField.Length - indentLength));
                    this.currentIndentField = this.currentIndentField.Remove((this.currentIndentField.Length - indentLength));
                }
            }
            return returnValue;
        }
        /// <summary>
        /// Remove any indentation
        /// </summary>
        public void ClearIndent()
        {
            this.indentLengths.Clear();
            this.currentIndentField = "";
        }
        #endregion
        #region ToString Helpers
        /// <summary>
        /// Utility class to produce culture-oriented representation of an object as a string.
        /// </summary>
        public class ToStringInstanceHelper
        {
            private System.IFormatProvider formatProviderField  = global::System.Globalization.CultureInfo.InvariantCulture;
            /// <summary>
            /// Gets or sets format provider to be used by ToStringWithCulture method.
            /// </summary>
            public System.IFormatProvider FormatProvider
            {
                get
                {
                    return this.formatProviderField ;
                }
                set
                {
                    if ((value != null))
                    {
                        this.formatProviderField  = value;
                    }
                }
            }
            /// <summary>
            /// This is called from the compile/run appdomain to convert objects within an expression block to a string
            /// </summary>
            public string ToStringWithCulture(object objectToConvert)
            {
                if ((objectToConvert == null))
                {
                    throw new global::System.ArgumentNullException("objectToConvert");
                }
                System.Type t = objectToConvert.GetType();
                System.Reflection.MethodInfo method = t.GetMethod("ToString", new System.Type[] {
                            typeof(System.IFormatProvider)});
                if ((method == null))
                {
                    return objectToConvert.ToString();
                }
                else
                {
                    return ((string)(method.Invoke(objectToConvert, new object[] {
                                this.formatProviderField })));
                }
            }
        }
        private ToStringInstanceHelper toStringHelperField = new ToStringInstanceHelper();
        /// <summary>
        /// Helper to produce culture-oriented representation of an object as a string
        /// </summary>
        public ToStringInstanceHelper ToStringHelper
        {
            get
            {
                return this.toStringHelperField;
            }
        }
        #endregion
    }
    #endregion
}
